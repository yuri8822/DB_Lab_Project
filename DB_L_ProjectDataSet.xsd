<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="DB_L_ProjectDataSet" targetNamespace="http://tempuri.org/DB_L_ProjectDataSet.xsd" xmlns:mstns="http://tempuri.org/DB_L_ProjectDataSet.xsd" xmlns="http://tempuri.org/DB_L_ProjectDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="DB_L_ProjectConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="DB_L_ProjectConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.DB_Lab_Project.Properties.Settings.GlobalReference.Default.DB_L_ProjectConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="CLASSTableAdapter" GeneratorDataComponentClassName="CLASSTableAdapter" Name="CLASS" UserDataComponentName="CLASSTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DB_L_ProjectConnectionString (Settings)" DbObjectName="DB_L_Project.dbo.CLASS" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[CLASS] WHERE (([ClassCode] = @Original_ClassCode) AND ((@IsNull_ClassName = 1 AND [ClassName] IS NULL) OR ([ClassName] = @Original_ClassName)) AND ((@IsNull_ManagedBy = 1 AND [ManagedBy] IS NULL) OR ([ManagedBy] = @Original_ManagedBy)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ClassCode" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ClassCode" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_ClassName" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ClassName" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_ClassName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ClassName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_ManagedBy" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ManagedBy" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ManagedBy" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ManagedBy" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[CLASS] ([ClassCode], [ClassName], [ManagedBy]) VALUES (@ClassCode, @ClassName, @ManagedBy);
SELECT ClassCode, ClassName, ManagedBy FROM CLASS WHERE (ClassCode = @ClassCode)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ClassCode" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ClassCode" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@ClassName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ClassName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ManagedBy" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ManagedBy" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ClassCode, ClassName, ManagedBy FROM dbo.CLASS</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[CLASS] SET [ClassCode] = @ClassCode, [ClassName] = @ClassName, [ManagedBy] = @ManagedBy WHERE (([ClassCode] = @Original_ClassCode) AND ((@IsNull_ClassName = 1 AND [ClassName] IS NULL) OR ([ClassName] = @Original_ClassName)) AND ((@IsNull_ManagedBy = 1 AND [ManagedBy] IS NULL) OR ([ManagedBy] = @Original_ManagedBy)));
SELECT ClassCode, ClassName, ManagedBy FROM CLASS WHERE (ClassCode = @ClassCode)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ClassCode" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ClassCode" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@ClassName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ClassName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ManagedBy" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ManagedBy" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ClassCode" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ClassCode" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_ClassName" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ClassName" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_ClassName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ClassName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_ManagedBy" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ManagedBy" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ManagedBy" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ManagedBy" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ClassCode" DataSetColumn="ClassCode" />
              <Mapping SourceColumn="ClassName" DataSetColumn="ClassName" />
              <Mapping SourceColumn="ManagedBy" DataSetColumn="ManagedBy" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="STUDENT_CLASSTableAdapter" GeneratorDataComponentClassName="STUDENT_CLASSTableAdapter" Name="STUDENT_CLASS" UserDataComponentName="STUDENT_CLASSTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DB_L_ProjectConnectionString (Settings)" DbObjectName="DB_L_Project.dbo.STUDENT_CLASS" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[STUDENT_CLASS] WHERE (([UserID] = @Original_UserID) AND ([ClassCode] = @Original_ClassCode))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_UserID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UserID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ClassCode" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ClassCode" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[STUDENT_CLASS] ([UserID], [ClassCode]) VALUES (@UserID, @ClassCode);
SELECT UserID, ClassCode FROM STUDENT_CLASS WHERE (ClassCode = @ClassCode) AND (UserID = @UserID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@UserID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UserID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ClassCode" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ClassCode" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT UserID, ClassCode FROM dbo.STUDENT_CLASS</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[STUDENT_CLASS] SET [UserID] = @UserID, [ClassCode] = @ClassCode WHERE (([UserID] = @Original_UserID) AND ([ClassCode] = @Original_ClassCode));
SELECT UserID, ClassCode FROM STUDENT_CLASS WHERE (ClassCode = @ClassCode) AND (UserID = @UserID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@UserID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UserID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ClassCode" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ClassCode" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_UserID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UserID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ClassCode" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ClassCode" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="UserID" DataSetColumn="UserID" />
              <Mapping SourceColumn="ClassCode" DataSetColumn="ClassCode" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TEACHER_CLASSTableAdapter" GeneratorDataComponentClassName="TEACHER_CLASSTableAdapter" Name="TEACHER_CLASS" UserDataComponentName="TEACHER_CLASSTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DB_L_ProjectConnectionString (Settings)" DbObjectName="DB_L_Project.dbo.TEACHER_CLASS" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[TEACHER_CLASS] WHERE (([UserID] = @Original_UserID) AND ([ClassCode] = @Original_ClassCode))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_UserID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UserID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ClassCode" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ClassCode" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[TEACHER_CLASS] ([UserID], [ClassCode]) VALUES (@UserID, @ClassCode);
SELECT UserID, ClassCode FROM TEACHER_CLASS WHERE (ClassCode = @ClassCode) AND (UserID = @UserID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@UserID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UserID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ClassCode" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ClassCode" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT UserID, ClassCode FROM dbo.TEACHER_CLASS</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[TEACHER_CLASS] SET [UserID] = @UserID, [ClassCode] = @ClassCode WHERE (([UserID] = @Original_UserID) AND ([ClassCode] = @Original_ClassCode));
SELECT UserID, ClassCode FROM TEACHER_CLASS WHERE (ClassCode = @ClassCode) AND (UserID = @UserID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@UserID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UserID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ClassCode" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ClassCode" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_UserID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UserID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ClassCode" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ClassCode" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="UserID" DataSetColumn="UserID" />
              <Mapping SourceColumn="ClassCode" DataSetColumn="ClassCode" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="DB_L_ProjectDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_UserDSName="DB_L_ProjectDataSet" msprop:Generator_DataSetName="DB_L_ProjectDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="CLASS" msprop:Generator_RowEvHandlerName="CLASSRowChangeEventHandler" msprop:Generator_RowDeletedName="CLASSRowDeleted" msprop:Generator_RowDeletingName="CLASSRowDeleting" msprop:Generator_RowEvArgName="CLASSRowChangeEvent" msprop:Generator_TablePropName="CLASS" msprop:Generator_RowChangedName="CLASSRowChanged" msprop:Generator_RowChangingName="CLASSRowChanging" msprop:Generator_TableClassName="CLASSDataTable" msprop:Generator_RowClassName="CLASSRow" msprop:Generator_TableVarName="tableCLASS" msprop:Generator_UserTableName="CLASS">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ClassCode" msprop:Generator_ColumnPropNameInRow="ClassCode" msprop:Generator_ColumnPropNameInTable="ClassCodeColumn" msprop:Generator_ColumnVarNameInTable="columnClassCode" msprop:Generator_UserColumnName="ClassCode" type="xs:int" />
              <xs:element name="ClassName" msprop:Generator_ColumnPropNameInRow="ClassName" msprop:Generator_ColumnPropNameInTable="ClassNameColumn" msprop:Generator_ColumnVarNameInTable="columnClassName" msprop:Generator_UserColumnName="ClassName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="ManagedBy" msprop:Generator_ColumnPropNameInRow="ManagedBy" msprop:Generator_ColumnPropNameInTable="ManagedByColumn" msprop:Generator_ColumnVarNameInTable="columnManagedBy" msprop:Generator_UserColumnName="ManagedBy" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="STUDENT_CLASS" msprop:Generator_RowEvHandlerName="STUDENT_CLASSRowChangeEventHandler" msprop:Generator_RowDeletedName="STUDENT_CLASSRowDeleted" msprop:Generator_RowDeletingName="STUDENT_CLASSRowDeleting" msprop:Generator_RowEvArgName="STUDENT_CLASSRowChangeEvent" msprop:Generator_TablePropName="STUDENT_CLASS" msprop:Generator_RowChangedName="STUDENT_CLASSRowChanged" msprop:Generator_RowChangingName="STUDENT_CLASSRowChanging" msprop:Generator_TableClassName="STUDENT_CLASSDataTable" msprop:Generator_RowClassName="STUDENT_CLASSRow" msprop:Generator_TableVarName="tableSTUDENT_CLASS" msprop:Generator_UserTableName="STUDENT_CLASS">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="UserID" msprop:Generator_ColumnPropNameInRow="UserID" msprop:Generator_ColumnPropNameInTable="UserIDColumn" msprop:Generator_ColumnVarNameInTable="columnUserID" msprop:Generator_UserColumnName="UserID" type="xs:int" />
              <xs:element name="ClassCode" msprop:Generator_ColumnPropNameInRow="ClassCode" msprop:Generator_ColumnPropNameInTable="ClassCodeColumn" msprop:Generator_ColumnVarNameInTable="columnClassCode" msprop:Generator_UserColumnName="ClassCode" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="TEACHER_CLASS" msprop:Generator_RowEvHandlerName="TEACHER_CLASSRowChangeEventHandler" msprop:Generator_RowDeletedName="TEACHER_CLASSRowDeleted" msprop:Generator_RowDeletingName="TEACHER_CLASSRowDeleting" msprop:Generator_RowEvArgName="TEACHER_CLASSRowChangeEvent" msprop:Generator_TablePropName="TEACHER_CLASS" msprop:Generator_RowChangedName="TEACHER_CLASSRowChanged" msprop:Generator_RowChangingName="TEACHER_CLASSRowChanging" msprop:Generator_TableClassName="TEACHER_CLASSDataTable" msprop:Generator_RowClassName="TEACHER_CLASSRow" msprop:Generator_TableVarName="tableTEACHER_CLASS" msprop:Generator_UserTableName="TEACHER_CLASS">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="UserID" msprop:Generator_ColumnPropNameInRow="UserID" msprop:Generator_ColumnPropNameInTable="UserIDColumn" msprop:Generator_ColumnVarNameInTable="columnUserID" msprop:Generator_UserColumnName="UserID" type="xs:int" />
              <xs:element name="ClassCode" msprop:Generator_ColumnPropNameInRow="ClassCode" msprop:Generator_ColumnPropNameInTable="ClassCodeColumn" msprop:Generator_ColumnVarNameInTable="columnClassCode" msprop:Generator_UserColumnName="ClassCode" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:CLASS" />
      <xs:field xpath="mstns:ClassCode" />
    </xs:unique>
    <xs:unique name="STUDENT_CLASS_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:STUDENT_CLASS" />
      <xs:field xpath="mstns:UserID" />
      <xs:field xpath="mstns:ClassCode" />
    </xs:unique>
    <xs:unique name="TEACHER_CLASS_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:TEACHER_CLASS" />
      <xs:field xpath="mstns:UserID" />
      <xs:field xpath="mstns:ClassCode" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK__STUDENT_C__Class__5FB337D6" msdata:parent="CLASS" msdata:child="STUDENT_CLASS" msdata:parentkey="ClassCode" msdata:childkey="ClassCode" msprop:Generator_UserParentTable="CLASS" msprop:Generator_UserChildTable="STUDENT_CLASS" msprop:Generator_RelationVarName="relationFK__STUDENT_C__Class__5FB337D6" msprop:Generator_ChildPropName="GetSTUDENT_CLASSRows" msprop:Generator_ParentPropName="CLASSRow" msprop:Generator_UserRelationName="FK__STUDENT_C__Class__5FB337D6" />
      <msdata:Relationship name="FK__TEACHER_C__Class__5070F446" msdata:parent="CLASS" msdata:child="TEACHER_CLASS" msdata:parentkey="ClassCode" msdata:childkey="ClassCode" msprop:Generator_UserParentTable="CLASS" msprop:Generator_UserChildTable="TEACHER_CLASS" msprop:Generator_RelationVarName="relationFK__TEACHER_C__Class__5070F446" msprop:Generator_ChildPropName="GetTEACHER_CLASSRows" msprop:Generator_ParentPropName="CLASSRow" msprop:Generator_UserRelationName="FK__TEACHER_C__Class__5070F446" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>